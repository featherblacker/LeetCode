###题干
3. 无重复字符的最长子串
给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:

输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
###代码 
双指针法-滑动窗口
```python
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        if not s:
            return 0
        left, right = 0, 1
        res = 1
        while left <= right < len(s):
            if s[right] in s[left:right]:
                left+=1
            else:
                right+=1
                res = max(res, right-left)
        return res
```
哈希法-优化的滑动窗口
```python
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        dict = {}
        maximum = start = 0
        for i, value in enumerate(s):
            #如果之前出现过这个字母，并且最后一次出现的位置在窗口内部（大于左边界），改变左边界的位置
            if value in dict:
                sums = dict[value] + 1
                if sums > start:
                    start = sums
            #计算新窗口的长度
            num = i - start + 1
            if num > maximum:
                maximum = num
            dict[value] = i
        return maximum
```