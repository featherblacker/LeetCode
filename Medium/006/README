###题干
####6. Z 字形变换
将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。

比如输入字符串为 "LEETCODEISHIRING" 行数为 3 时，排列如下：
```python
L   C   I   R
E T O E S I I G
E   D   H   N
```

之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如："LCIRETOESIIGEDHN"。

请你实现这个将字符串进行指定行数变换的函数：

string convert(string s, int numRows);
示例 1:

输入: s = "LEETCODEISHIRING", numRows = 3
输出: "LCIRETOESIIGEDHN"
示例 2:

输入: s = "LEETCODEISHIRING", numRows = 4
输出: "LDREOEIIECIHNTSG"
解释:
```python
L     D     R
E   O E   I I
E C   I H   N
T     S     G
```


###代码

####解法一
利用循环打印每一行字符串
```python
class Solution(object):
    def convert(self, s, numRows):
        """
        :type s: str
        :type numRows: int
        :rtype: str
        """
        lst = [''] * numRows
        if numRows == 1:
            return s
        while s:
            for i in range(len(lst)):
                try:
                    lst[i] += s[i]
                    if 0 < i < len(lst) - 1:
                        try:
                            lst[i] += s[2 * numRows - 2 - i]
                        except:
                            continue
                except:
                    return ''.join(lst)
            s = s[2 * numRows - 2:]
        return ''.join(lst)
```

####解法二

利用 flag 进行反向索引, 逐步遍历

```python
class Solution:
    def convert(self, s: str, numRows: int) -> str:
        if numRows < 2: return s
        res = ["" for _ in range(numRows)]
        i, flag = 0, -1
        for c in s:
            res[i] += c
            if i == 0 or i == numRows - 1: flag = -flag
            i += flag
        return "".join(res)

```