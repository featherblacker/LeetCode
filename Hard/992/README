###题干
992. K 个不同整数的子数组
给定一个正整数数组 A，如果 A 的某个子数组中不同整数的个数恰好为 K，则称 A 的这个连续、不一定独立的子数组为好子数组。

（例如，[1,2,3,1,2] 中有 3 个不同的整数：1，2，以及 3。）

返回 A 中好子数组的数目。



示例 1：

输入：A = [1,2,1,2,3], K = 2
输出：7
解释：恰好由 2 个不同整数组成的子数组：[1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].
示例 2：

输入：A = [1,2,1,3,4], K = 3
输出：3
解释：恰好由 3 个不同整数组成的子数组：[1,2,1,3], [2,1,3], [1,3,4].


提示：

1 <= A.length <= 20000settings
1 <= A[i] <= A.length
1 <= K <= A.length

###代码
滑动窗口+哈希表
```python
class Solution(object):
    def subarraysWithKDistinct(self, A, K):
        """
        :type A: List[int]
        :type K: int
        :rtype: int
        """
        res = left = right = 0
        dict = {}
        while right < len(A):
            # 滑动窗口的的右边界加入计数
            try:
                dict[A[right]] += 1
            except:
                dict[A[right]] = 1
            right += 1
            # 窗口内字母种类超过规定个数时窗口左边界右移
            while len(dict) > K:
                if dict[A[left]] > 1:
                    dict[A[left]] -= 1
                else:
                    dict.pop(A[left])
                left += 1
            # 窗口内字母种类满足要求时左边界试探性向右移，测试所有可能的子集
            tmp = left
            while len(dict) == K:
                res += 1
                if dict[A[tmp]] > 1:
                    dict[A[tmp]] -= 1
                else:
                    dict.pop(A[tmp])
                tmp += 1
            # 加完数后把左边界恢复到原来的位置，哈希表也同时复原
            while tmp > left:
                try:
                    dict[A[tmp - 1]] += 1
                except:
                    dict[A[tmp - 1]] = 1
                tmp -= 1

        return res

```