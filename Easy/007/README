### 题干
#### 7. 整数反转
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321
 示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。

### 题解

#### 解法一

```python
class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        res = ""
        chars = str(x)
        if len(chars) == 1:
            return x
        if chars[0] == '-':
            res += '-'
            chars = chars[1:]
        chars = chars[::-1]
        while chars[0] == '0':
            chars = chars[1:]
        res += chars
        res = int(res)
        if res < -2 ** 31 or res > 2 ** 31 - 1:
            return 0
        return res
```


####解法二

```python
class Solution(object):
    def reverse(self, x):
        y, res = abs(x), 0
        # 则其数值范围为 [−2^31,  2^31 − 1]
        boundry = (1 << 31) - 1 if x > 0 else 1 << 31
        while y != 0:
            res = res * 10 + y % 10
            if res > boundry:
                return 0
            y //= 10
        return res if x > 0 else -res
```